[{"/Users/truecoders/repos/react/memory-game-complete/src/reportWebVitals.js":"1","/Users/truecoders/repos/react/memory-game-complete/src/index.js":"2","/Users/truecoders/repos/react/memory-game-complete/src/App.jsx":"3","/Users/truecoders/repos/react/memory-game-complete/src/components/GameItem.jsx":"4"},{"size":362,"mtime":1610558649246,"results":"5","hashOfConfig":"6"},{"size":500,"mtime":1610559397209,"results":"7","hashOfConfig":"6"},{"size":3038,"mtime":1610566759303,"results":"8","hashOfConfig":"6"},{"size":331,"mtime":1610566076955,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1irk0j8",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/truecoders/repos/react/memory-game-complete/src/reportWebVitals.js",[],"/Users/truecoders/repos/react/memory-game-complete/src/index.js",[],"/Users/truecoders/repos/react/memory-game-complete/src/App.jsx",["19"],"import \"./App.css\";\nimport * as React from \"react\";\nimport GameItem from \"./components/GameItem\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      score: 0,\n      bestScore: 0,\n      numbers: [\n        {\n          content: \"ichi\",\n          wasClicked: false,\n        },\n        {\n          content: \"ni\",\n          wasClicked: false,\n        },\n        {\n          content: \"san\",\n          wasClicked: false,\n        },\n        {\n          content: \"shi\",\n          wasClicked: false,\n        },\n        {\n          content: \"go\",\n          wasClicked: false,\n        },\n        {\n          content: \"roku\",\n          wasClicked: false,\n        },\n        {\n          content: \"shichi\",\n          wasClicked: false,\n        },\n        {\n          content: \"hachi\",\n          wasClicked: false,\n        },\n        {\n          content: \"kyuu\",\n          wasClicked: false,\n        },\n        {\n          content: \"juu\",\n          wasClicked: false,\n        },\n      ],\n    };\n\n    this.checkScore = this.checkScore.bind(this);\n    this.randomizeNumbers = this.randomizeNumbers.bind(this);\n  }\n\n  checkScore(item) {\n    let tempArray = this.randomizeNumbers();\n    if (item.wasClicked) {\n      tempArray.forEach((item) => {\n        item.wasClicked = false;\n      });\n      this.setState({\n        score: 0,\n        bestScore: this.state.score,\n        numbers: tempArray,\n      });\n    } else {\n      this.state.numbers.forEach((num) => {\n        if (item.content == num.content) {\n          num.wasClicked = true;\n        }\n      });\n      this.setState({\n        score: this.state.score + 1,\n        bestScore: this.state.score + 1,\n        numbers: tempArray,\n      });\n    }\n  }\n\n  randomizeNumbers() {\n    let array = this.state.numbers;\n    let index = this.state.numbers.length,\n      temporaryIndex,\n      randomIndex;\n\n    while (0 !== index) {\n      randomIndex = Math.floor(Math.random() * index);\n      index -= 1;\n\n      temporaryIndex = array[index];\n      array[index] = array[randomIndex];\n      array[randomIndex] = temporaryIndex;\n    }\n\n    return array;\n  }\n\n  componentDidMount() {\n    let array = this.randomizeNumbers();\n    this.setState({ numbers: array });\n  }\n\n  render() {\n    return (\n      <main className=\"App\">\n        <header className=\"App-header\">\n          <h1>React Memory Game</h1>\n          <p>Click on one of the numbers to get started!</p>\n          <div className=\"App-scoreboard\">\n            <span>Score: {this.state.score}</span>\n            <span>Best Score: {this.state.bestScore}</span>\n          </div>\n        </header>\n        <section className=\"App-container\">\n          <div className=\"App-item-container\">\n            {this.state.numbers.map((num) => {\n              return (\n                <div key={num.content + \"\"}>\n                  <GameItem value={num} method={this.checkScore} />\n                </div>\n              );\n            })}\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","/Users/truecoders/repos/react/memory-game-complete/src/components/GameItem.jsx",[],{"ruleId":"20","severity":1,"message":"21","line":73,"column":26,"nodeType":"22","messageId":"23","endLine":73,"endColumn":28},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]